{"version":3,"sources":["actions/pokemonSearch.actions.js","assets/question-mark.png","components/pokemonCard.jsx","components/pokedex.jsx","App.js","reportWebVitals.js","index.js"],"names":["getPokemonInfo","pokemonName","a","axios","get","response","data","base_experience","id","height","name","weight","sprites","front_default","types","type","console","log","PokemonCard","xp","image","py","role","p","w","className","mt","pos","width","objectFit","src","pt","align","fontSize","toUpperCase","colorScheme","direction","PokeDex","useState","setPokemonName","pokemonData","setPokemonData","JSON","parse","localStorage","getItem","myTeam","setMyTeam","pokemonCardName","setPokemonCardName","pokemonID","setPokemonID","pokemonXp","setPokemonXp","pokemonHeight","setPokemonHeight","pokemonWeight","setPokemonWeight","pokemonImage","setPokemonImage","pokemonType","setPokemonType","toast","useToast","searchPokemon","PokemonActions","toLowerCase","undefined","result","position","title","description","status","duration","isClosable","addPokemon","bool","i","length","setItem","stringify","alignItems","bg","onChange","event","target","value","placeholder","variant","mb","onClick","QuestionMark","disabled","justifyContent","map","row","idx","Delete","color","index","array","splice","deletePokemon","h","borderRadius","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa0547b3.chunk.js","sourcesContent":["import axios from 'axios';\n\n/*\n* gets the following information:\n* pokemon base experience, ID, name, height, weight, image URL, \n*/\nexport const getPokemonInfo = async (pokemonName) => {\n    try {\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`)\n        return [response.data.base_experience, response.data.id, response.data.height, response.data.name, response.data.weight, response.data.sprites.front_default, response.data.types[0].type.name];\n    } catch(err) {\n        console.log(err);\n    }\n}","export default __webpack_public_path__ + \"static/media/question-mark.21a93c68.png\";","import React, { useState, useEffect } from 'react'\nimport { Heading, Center, Stack, Badge, Text, Box, Image } from '@chakra-ui/react'\nimport '../App.css';\n\nconst PokemonCard = ({ name, id, xp, height, weight, image, type }) => {\n\n    return (\n        <div>\n            <Center py={4}>\n                <Box\n                    role={'group'}\n                    p={6}\n                    w={'full'}\n                    className='background-card'>\n                    <div className='pokemon-card'>\n                        <Box\n                            mt={-12}\n                            pos={'relative'}\n                            height={'230px'}\n                        >\n                            <Image\n                                height={150}\n                                width={150}\n                                objectFit={'cover'}\n                                src={image}\n                                className='pokemon-img'\n                            />\n                        </Box>\n                    </div>\n                    <Stack pt={3} align={'center'}>\n                        <Heading className='pokemon-name' fontSize={'3xl'}>\n                            {name.toUpperCase()}\n                        </Heading>\n                        <Badge colorScheme=\"pink\">{type}</Badge>\n                        <div className='info-stack'>\n                            <Stack className='stack' direction={'column'} align={'center'}>\n                                <Text className='stack-text' fontSize={'m'}>\n                                    ID#\n                                </Text>\n                                <Text className='stack-text'>\n                                    {id}\n                                </Text>\n                            </Stack>\n                            <Stack className='stack' direction={'column'} align={'center'}>\n                                <Text className='stack-text' fontSize={'m'}>\n                                    XP\n                                </Text>\n                                <Text className='stack-text'>\n                                    {xp}\n                                </Text>\n                            </Stack>\n                            <Stack className='stack' direction={'column'} align={'center'}>\n                                <Text className='stack-text' fontSize={'m'}>\n                                    Height\n                                </Text>\n                                <Text className='stack-text'>\n                                    {height}\n                                </Text>\n                            </Stack>\n                            <Stack className='stack' direction={'column'} align={'center'}>\n                                <Text className='stack-text' fontSize={'m'}>\n                                    Weight\n                                </Text>\n                                <Text className='stack-text'>\n                                    {weight}\n                                </Text>\n                            </Stack>\n                        </div>\n                    </Stack>\n                </Box>\n            </Center>\n        </div>\n    )\n}\n\nexport default PokemonCard","import React, { useState, useEffect } from 'react'\nimport { Flex, Heading, Input, useToast, GridItem, Button, Image, useColorMode, useColorModeValue, extendTheme } from '@chakra-ui/react'\nimport * as PokemonActions from '../actions/pokemonSearch.actions';\nimport '../App.css';\nimport QuestionMark from '../assets/question-mark.png';\nimport { DeleteIcon } from '@chakra-ui/icons'\nimport PokemonCard from './pokemonCard';\n\nconst PokeDex = () => {\n\n    const [pokemonName, setPokemonName] = useState('');\n    const [pokemonData, setPokemonData] = useState([]);\n    const [myTeam, setMyTeam] = useState(JSON.parse(localStorage.getItem('my-team')) || []);\n    const [pokemonCardName, setPokemonCardName] = useState('');\n    const [pokemonID, setPokemonID] = useState('');\n    const [pokemonXp, setPokemonXp] = useState('');\n    const [pokemonHeight, setPokemonHeight] = useState('');\n    const [pokemonWeight, setPokemonWeight] = useState('');\n    const [pokemonImage, setPokemonImage] = useState('');\n    const [pokemonType, setPokemonType] = useState('');\n    const toast = useToast()\n\n    const handlePokemonName = (event) => {\n        setPokemonName(event.target.value);\n    }\n\n    //api call for pokemon & sets all variable for pokemon data\n    const searchPokemon = async (name) => {\n        const result = await PokemonActions.getPokemonInfo(name.toLowerCase());\n\n        if (result !== undefined) {\n            setPokemonData(result);\n            setPokemonCardName(result[3]);\n            setPokemonID(result[1]);\n            setPokemonXp(result[0]);\n            setPokemonHeight(result[2]);\n            setPokemonWeight(result[4]);\n            setPokemonImage(result[5]);\n            setPokemonType(result[6]);\n        } else {\n            toast({\n                position: 'top-right',\n                title: \"Error\",\n                description: `${pokemonName} does not exist`,\n                status: \"error\",\n                duration: 4000,\n                isClosable: true,\n            })\n        }\n\n    }\n\n    //sets data for pokemon card when pokemon is clicked from 'My Team'\n    const myTeamClicked = (event) => {\n        setPokemonData(myTeam[event]);\n        setPokemonCardName(myTeam[event][3]);\n        setPokemonID(myTeam[event][1]);\n        setPokemonXp(myTeam[event][0]);\n        setPokemonHeight(myTeam[event][2]);\n        setPokemonWeight(myTeam[event][4]);\n        setPokemonImage(myTeam[event][5]);\n        setPokemonType(myTeam[event][6]);\n    }\n\n    //logic for add pokemon to team\n    const addPokemon = () => {\n        //checks if pokemon exists in team\n        var bool = false;\n        for (var i = 0; i < myTeam.length; i++) {\n            if (myTeam[i][3] === pokemonData[3]) {\n                bool = true;\n            }\n        }\n\n        //logic for size of team & pre-existing pokemon check\n        if (myTeam.length !== 6) {\n            if (bool === false) { //if pokemon does not exist in team... add to team\n                setMyTeam(myTeam => [...myTeam, pokemonData]);\n                localStorage.setItem('my-team', JSON.stringify([...myTeam, pokemonData])); //localstorage to save team\n            } else {\n                toast({\n                    position: 'top-right',\n                    title: \"Error\",\n                    description: `${pokemonCardName} is already in your team!`,\n                    status: \"error\",\n                    duration: 4000,\n                    isClosable: true,\n                })\n            }\n        } else {\n            toast({\n                position: 'top-right',\n                title: \"Error\",\n                description: \"Your PokeMon team is full!\",\n                status: \"error\",\n                duration: 4000,\n                isClosable: true,\n            })\n        }\n    }\n\n    //delete pokemon from team\n    const deletePokemon = (index) => {\n        var array = [...myTeam];\n        toast({\n            position: \"top-right\",\n            title: \"Success\",\n            description: `Removing ${myTeam[index][3]} from your team.`,\n            status: \"success\",\n            duration: 4000,\n            isClosable: true,\n        })\n        array.splice(index, 1);\n        localStorage.setItem('my-team', JSON.stringify(array)); //local storage to delete pokemon from team\n        setMyTeam(array);\n    }\n\n    return (\n        <div className='container' height='100vh'>\n            <Flex className='pokedex-container' alignItems='center' p={8}>\n                <GridItem bg='red.500' className='inner-pokedex' p={3}>\n                    <Input onChange={handlePokemonName} w='300px' className='search' placeholder=\"Pikachu\" variant='filled' mb={3} />\n                    <Button onClick={() => searchPokemon(pokemonName)} colorScheme='green'>Search</Button>\n                    <div>\n                        {\n                            pokemonData.length > 0 && pokemonData !== undefined ?\n                                <div>\n                                    <PokemonCard name={pokemonCardName} id={pokemonID} xp={pokemonXp} height={pokemonHeight} weight={pokemonWeight} image={pokemonImage} type={pokemonType} />\n                                    <Button onClick={addPokemon} className='add-btn' colorScheme='green'>Add to My Team</Button>\n                                </div>\n                                : pokemonData !== undefined ? <div>\n                                    <PokemonCard name={pokemonCardName} id={pokemonID} xp={pokemonXp} height={pokemonHeight} weight={pokemonWeight} image={QuestionMark} type={pokemonType} />\n                                    <Button onClick={addPokemon} disabled className='add-btn' colorScheme='green'>Add to My Team</Button>\n                                </div> : <Heading></Heading>\n                        }\n                    </div>\n                </GridItem>\n            </Flex>\n            <Flex className='pokemon-team' alignItems='center' justifyContent='center' p={8}>\n                <div className='inner-team'>\n                    <Heading>Your Team</Heading>\n                    {myTeam.map((row, idx) => {\n                        return (\n                            <div className='my-pokemon' key={row} onClick={() => myTeamClicked(idx)}>\n                                <DeleteIcon color='gray.100' className='delete-icon' onClick={() => deletePokemon(idx)} />\n                                <Image h='100%' w='100%' borderRadius=\"md\" src={row[5]} />\n                            </div>\n                        );\n                    })}\n                </div>\n            </Flex>\n        </div >\n    )\n}\n\nexport default PokeDex","import * as React from 'react'\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport './App.css';\nimport PokeDex from '../src/components/pokedex'\n\nexport default function App({ Component }) {\n\n  return (\n    <ChakraProvider>\n      <PokeDex />\n    </ChakraProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}